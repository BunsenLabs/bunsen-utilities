#!/bin/bash
#
#    bl-conkyedit: a BunsenLabs Conky Editor
#    Copyright (C) 2015 damo    <damo@bunsenlabs.org>
#
#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
########################################################################
#
#   Conkys must be in $CONKYPATH
#   The name must end with "conky" or -conky.conf"
#
#   Checkmarked conkys will be opened in the text editor
#   Multiple conkys can be chosen
#
########################################################################

declare CONKYPATH="$HOME/.config/conky"
declare -a CONKYS_PATH
declare -a CONKYS_ARR

HELP="bl-conkyedit is a script to edit selected Conky config files
which are displayed in a yad window with checkboxes.

Usage: bl-conkyedit
   or: bl-conkyedit -h|--help

Optional arguments:
    -h | --help    Show this message (no other options are supported)

Conkys must be in $CONKYPATH
The name must end with 'conkyrc', 'conky' or 'conky.conf'

Checkmarked conkys will be opened in the text editor.
Multiple conkys can be chosen.
"

### DIALOG VARIABLES
DLGDEC="yad --center  --borders=20 --width=400 --height=500 "
TITLE="BunsenLabs Conky Edit"
WINICON="--window-icon=distributor-logo-bunsenlabs"
OK="--button=OK:0"
CANCEL="--button=gtk-cancel:1"

########## FUNCTIONS ###################################################

fillArrays(){
    local num="$1"
    CONKYS_PATH[$num]="$2"   # full filepath to conky
    CONKYS_ARR[$num]="$3"    # displayed name: "directory/*conky(rc)"
}

findConky(){
   # search dirs for conkys files - looking for "conky" in the name
   # if "*conky(rc)" then display it
   local num=0
   # find files in CONKYPATH with conky in the name
#   for x in $(find "$CONKYPATH" -type f );do
#       f=$(basename "$x")    # filename from filepath
#       if [[ $f = *conky.conf ]] || [[ $f = *conky ]];then
#           # filename ends with *conky or *conky.conf
#           # get directory/conkyname to display in list
#           CONKY=$( echo "$x" | awk -F"/" '{print $(NF-1)"/"$NF}')
#           fillArrays $num "$x" "$CONKY"
#           num=$((num+1))
#       fi
#   done
    while IFS= read -r -d '' x;do
        f=$(basename "$x")    # filename from filepath
        if [[ $f = *conky.conf ]] || [[ $f = *conky ]] || [[ $f = *conkyrc ]];then    # filename ends with *conkyrc, *conky or *conky.conf
            # get directory/conkyname to display in list
            CONKY=$( echo "$x" | awk -F"/" '{print $(NF-1)"/"$NF}')
            fillArrays $num "$x" "$CONKY"
            num=$((num+1))
        fi
    done < <(find "$CONKYPATH" -type f -print0)

}

######## END FUNCTIONS #################################################

# look for a help option somewhere
for i in "$@"
do
    case "$i" in
    -h|--help)
        echo "$HELP"
        exit 0
        ;;
    esac
done

# get conky directories in .conky, add to array
findConky

# loop through arrays, and build msg text for yad dialog
unset LISTCONKY
for ((j=0; j<${#CONKYS_ARR[*]}; j++));do
    LISTCONKY="$LISTCONKY FALSE ${CONKYS_ARR[j]}"
done

## Populate yad dialog from array, get return value(s)
RET=$($DLGDEC $WINICON --list --title="$TITLE" \
    --text="Select Conkys to edit from the list\nMultiple Conkys can be chosen" \
    --checklist \
    --column="Select:CHK" --column="Conky Name:TXT" $LISTCONKY --separator=":"\
    $OK $CANCEL \
    )

if [[ $? == 1 ]]; then # cancel button pressed
    exit 0
else
    i=0
    OIFS=$IFS   # save Internal Field Separator
    IFS=":"     # separator is ":" in returned choices
    for name in $RET; do
        retConky[$i]="$name"
        i=$((i+1))
    done
    IFS=$OIFS   # reset IFS back to default

    # Find the chosen conkys and edit them
    for name in ${retConky[*]};do       # loop through checkmarked conky names
        for ((j=0; j<${#CONKYS_PATH[*]}; j++));do  # traverse through elements
            for f in ${CONKYS_PATH[j]};do    # compare with choice from dialog
                display=$( echo "$f" | awk -F"/" '{print $(NF-1)"/"$NF}')
                if [[ $display = "$name" ]];then
                    bl-text-editor "$f"
                fi
            done
        done
    done
fi

exit 0
